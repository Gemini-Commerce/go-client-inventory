openapi: 3.0.1
info:
  contact:
    email: info@gemini-commerce.com
    name: Gemini Team
  license:
    name: Gemini fair use license
    url: https://gemini-commerce.com/api/fair-use-license
  title: inventory Service
  version: v1
servers:
- url: https://inventory.api.gogemini.io/
tags:
- description: inventory Description
  externalDocs:
    url: https://gemini-commerce.com/api/inventory
  name: Inventory
paths:
  /inventory.Inventory/AdjustQty:
    post:
      description: Increment or decrement the quantity
      operationId: AdjustQty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventoryAdjustQtyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventoryStockItem'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Adjust Quantity
      tags:
      - Inventory
      x-codegen-request-body-name: body
  /inventory.Inventory/AdjustQtyCommitted:
    post:
      description: Increment or decrement the quantity committed
      operationId: AdjustQtyCommitted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventoryAdjustQtyCommittedRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventoryStockItem'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Adjust Quantity Committed
      tags:
      - Inventory
      x-codegen-request-body-name: body
  /inventory.Inventory/CreateStockItem:
    post:
      operationId: CreateStockItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventoryCreateStockItemRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventoryStockItem'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      security:
      - standardAuthorization: []
      summary: Create Stock Item
      tags:
      - Inventory
      x-codegen-request-body-name: body
  /inventory.Inventory/GetQtySalable:
    post:
      operationId: GetQtySalable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventoryGetQtySalableRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventoryGetQtySalableResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get Salable Quantity
      tags:
      - Inventory
      x-codegen-request-body-name: body
  /inventory.Inventory/GetStockItem:
    post:
      operationId: GetStockItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventoryGetStockItemRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventoryStockItem'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get Stock Item
      tags:
      - Inventory
      x-codegen-request-body-name: body
  /inventory.Inventory/ListStockItems:
    post:
      operationId: ListStockItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventoryListStockItemsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventoryListStockItemsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: List Stock Items
      tags:
      - Inventory
      x-codegen-request-body-name: body
  /inventory.Inventory/ListStockItemsBySkus:
    post:
      operationId: ListStockItemsBySkus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventoryListStockItemsBySkusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventoryListStockItemsBySkusResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: List Stock Items by SKUs
      tags:
      - Inventory
      x-codegen-request-body-name: body
  /inventory.Inventory/RebalanceStockQtys:
    post:
      operationId: RebalanceStockQtys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventoryRebalanceStockQtysRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventoryStockItem'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Rebalance Stock Quantities
      tags:
      - Inventory
      x-codegen-request-body-name: body
  /inventory.Inventory/UpdateStockItem:
    post:
      operationId: UpdateStockItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inventoryUpdateStockItemRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventoryStockItem'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Update Stock Item
      tags:
      - Inventory
      x-codegen-request-body-name: body
components:
  schemas:
    UpdateStockItemRequestPayload:
      properties:
        outOfStockThreshold:
          format: int32
          type: integer
        qty:
          format: int32
          type: integer
        qtyCommitted:
          format: int32
          type: integer
      type: object
    inventoryAdjustQtyCommittedRequest:
      properties:
        tenantId:
          type: string
        sku:
          type: string
        qtyAdjust:
          format: int32
          title: delta value
          type: integer
      type: object
    inventoryAdjustQtyRequest:
      properties:
        tenantId:
          type: string
        sku:
          type: string
        qtyAdjust:
          format: int32
          title: delta value
          type: integer
      type: object
    inventoryCreateStockItemRequest:
      properties:
        tenantId:
          type: string
        sku:
          type: string
        outOfStockThreshold:
          format: int32
          type: integer
        qty:
          format: int32
          type: integer
        qtyCommitted:
          format: int32
          type: integer
      type: object
    inventoryGetQtySalableRequest:
      properties:
        tenantId:
          type: string
        sku:
          type: string
      type: object
    inventoryGetQtySalableResponse:
      example:
        qtySalable: 0
        tenantId: tenantId
        id: id
        sku: sku
      properties:
        tenantId:
          type: string
        id:
          type: string
        sku:
          type: string
        qtySalable:
          format: int32
          title: qty - qty_committed - out_of_stock_threshold
          type: integer
      type: object
    inventoryGetStockItemRequest:
      properties:
        tenantId:
          type: string
        sku:
          type: string
      type: object
    inventoryListStockItemsBySkusRequest:
      properties:
        tenantId:
          type: string
        skus:
          items:
            type: string
          type: array
      type: object
    inventoryListStockItemsBySkusResponse:
      example:
        stockItems:
        - outOfStockThreshold: 0
          createdAt: 2000-01-23T04:56:07.000+00:00
          qtyCommitted: 1
          qtySalable: 5
          qty: 6
          tenantId: tenantId
          id: id
          sku: sku
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - outOfStockThreshold: 0
          createdAt: 2000-01-23T04:56:07.000+00:00
          qtyCommitted: 1
          qtySalable: 5
          qty: 6
          tenantId: tenantId
          id: id
          sku: sku
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        stockItems:
          items:
            $ref: '#/components/schemas/inventoryStockItem'
          type: array
      type: object
    inventoryListStockItemsRequest:
      properties:
        tenantId:
          type: string
        pageSize:
          description: The maximum number of items to return.
          format: int64
          type: integer
        pageToken:
          description: "The next_page_token value returned from a previous List request,\
            \ if any."
          type: string
      type: object
    inventoryListStockItemsResponse:
      example:
        stockItems:
        - outOfStockThreshold: 0
          createdAt: 2000-01-23T04:56:07.000+00:00
          qtyCommitted: 1
          qtySalable: 5
          qty: 6
          tenantId: tenantId
          id: id
          sku: sku
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - outOfStockThreshold: 0
          createdAt: 2000-01-23T04:56:07.000+00:00
          qtyCommitted: 1
          qtySalable: 5
          qty: 6
          tenantId: tenantId
          id: id
          sku: sku
          updatedAt: 2000-01-23T04:56:07.000+00:00
        nextPageToken: nextPageToken
      properties:
        stockItems:
          items:
            $ref: '#/components/schemas/inventoryStockItem'
          type: array
        nextPageToken:
          description: |-
            Token to retrieve the next page of results, or empty if there are no
            more results in the list.
          type: string
      type: object
    inventoryRebalanceStockQtysRequest:
      properties:
        tenantId:
          type: string
        sku:
          type: string
        qtyCommitted:
          format: int32
          title: qty_committed to be applied to qty and old qty_committed
          type: integer
      type: object
    inventoryStockItem:
      example:
        outOfStockThreshold: 0
        createdAt: 2000-01-23T04:56:07.000+00:00
        qtyCommitted: 1
        qtySalable: 5
        qty: 6
        tenantId: tenantId
        id: id
        sku: sku
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        tenantId:
          type: string
        id:
          type: string
        sku:
          type: string
        outOfStockThreshold:
          format: int32
          type: integer
        qty:
          format: int32
          type: integer
        qtyCommitted:
          format: int32
          type: integer
        qtySalable:
          format: int32
          title: qty - qty_committed - out_of_stock_threshold
          type: integer
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      type: object
    inventoryUpdateStockItemRequest:
      properties:
        tenantId:
          type: string
        sku:
          type: string
        payload:
          $ref: '#/components/schemas/UpdateStockItemRequestPayload'
        payloadMask:
          type: string
      type: object
    protobufAny:
      additionalProperties:
        type: object
      properties:
        '@type':
          type: string
      type: object
    rpcStatus:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
      type: object
  securitySchemes:
    standardAuthorization:
      flows: {}
      type: oauth2
x-original-swagger-version: "2.0"
