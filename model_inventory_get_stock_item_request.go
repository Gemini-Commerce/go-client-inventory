/*
inventory Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package inventory

import (
	"encoding/json"
)

// checks if the InventoryGetStockItemRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InventoryGetStockItemRequest{}

// InventoryGetStockItemRequest struct for InventoryGetStockItemRequest
type InventoryGetStockItemRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	Sku *string `json:"sku,omitempty"`
}

// NewInventoryGetStockItemRequest instantiates a new InventoryGetStockItemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInventoryGetStockItemRequest() *InventoryGetStockItemRequest {
	this := InventoryGetStockItemRequest{}
	return &this
}

// NewInventoryGetStockItemRequestWithDefaults instantiates a new InventoryGetStockItemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInventoryGetStockItemRequestWithDefaults() *InventoryGetStockItemRequest {
	this := InventoryGetStockItemRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *InventoryGetStockItemRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryGetStockItemRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *InventoryGetStockItemRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *InventoryGetStockItemRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *InventoryGetStockItemRequest) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryGetStockItemRequest) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *InventoryGetStockItemRequest) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *InventoryGetStockItemRequest) SetSku(v string) {
	o.Sku = &v
}

func (o InventoryGetStockItemRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InventoryGetStockItemRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	return toSerialize, nil
}

type NullableInventoryGetStockItemRequest struct {
	value *InventoryGetStockItemRequest
	isSet bool
}

func (v NullableInventoryGetStockItemRequest) Get() *InventoryGetStockItemRequest {
	return v.value
}

func (v *NullableInventoryGetStockItemRequest) Set(val *InventoryGetStockItemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInventoryGetStockItemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInventoryGetStockItemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInventoryGetStockItemRequest(val *InventoryGetStockItemRequest) *NullableInventoryGetStockItemRequest {
	return &NullableInventoryGetStockItemRequest{value: val, isSet: true}
}

func (v NullableInventoryGetStockItemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInventoryGetStockItemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


