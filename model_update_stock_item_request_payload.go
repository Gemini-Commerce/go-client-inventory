/*
inventory Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package inventory

import (
	"encoding/json"
)

// checks if the UpdateStockItemRequestPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateStockItemRequestPayload{}

// UpdateStockItemRequestPayload struct for UpdateStockItemRequestPayload
type UpdateStockItemRequestPayload struct {
	OutOfStockThreshold *int32 `json:"outOfStockThreshold,omitempty"`
	Qty *int32 `json:"qty,omitempty"`
	QtyCommitted *int32 `json:"qtyCommitted,omitempty"`
}

// NewUpdateStockItemRequestPayload instantiates a new UpdateStockItemRequestPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateStockItemRequestPayload() *UpdateStockItemRequestPayload {
	this := UpdateStockItemRequestPayload{}
	return &this
}

// NewUpdateStockItemRequestPayloadWithDefaults instantiates a new UpdateStockItemRequestPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateStockItemRequestPayloadWithDefaults() *UpdateStockItemRequestPayload {
	this := UpdateStockItemRequestPayload{}
	return &this
}

// GetOutOfStockThreshold returns the OutOfStockThreshold field value if set, zero value otherwise.
func (o *UpdateStockItemRequestPayload) GetOutOfStockThreshold() int32 {
	if o == nil || IsNil(o.OutOfStockThreshold) {
		var ret int32
		return ret
	}
	return *o.OutOfStockThreshold
}

// GetOutOfStockThresholdOk returns a tuple with the OutOfStockThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockItemRequestPayload) GetOutOfStockThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.OutOfStockThreshold) {
		return nil, false
	}
	return o.OutOfStockThreshold, true
}

// HasOutOfStockThreshold returns a boolean if a field has been set.
func (o *UpdateStockItemRequestPayload) HasOutOfStockThreshold() bool {
	if o != nil && !IsNil(o.OutOfStockThreshold) {
		return true
	}

	return false
}

// SetOutOfStockThreshold gets a reference to the given int32 and assigns it to the OutOfStockThreshold field.
func (o *UpdateStockItemRequestPayload) SetOutOfStockThreshold(v int32) {
	o.OutOfStockThreshold = &v
}

// GetQty returns the Qty field value if set, zero value otherwise.
func (o *UpdateStockItemRequestPayload) GetQty() int32 {
	if o == nil || IsNil(o.Qty) {
		var ret int32
		return ret
	}
	return *o.Qty
}

// GetQtyOk returns a tuple with the Qty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockItemRequestPayload) GetQtyOk() (*int32, bool) {
	if o == nil || IsNil(o.Qty) {
		return nil, false
	}
	return o.Qty, true
}

// HasQty returns a boolean if a field has been set.
func (o *UpdateStockItemRequestPayload) HasQty() bool {
	if o != nil && !IsNil(o.Qty) {
		return true
	}

	return false
}

// SetQty gets a reference to the given int32 and assigns it to the Qty field.
func (o *UpdateStockItemRequestPayload) SetQty(v int32) {
	o.Qty = &v
}

// GetQtyCommitted returns the QtyCommitted field value if set, zero value otherwise.
func (o *UpdateStockItemRequestPayload) GetQtyCommitted() int32 {
	if o == nil || IsNil(o.QtyCommitted) {
		var ret int32
		return ret
	}
	return *o.QtyCommitted
}

// GetQtyCommittedOk returns a tuple with the QtyCommitted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateStockItemRequestPayload) GetQtyCommittedOk() (*int32, bool) {
	if o == nil || IsNil(o.QtyCommitted) {
		return nil, false
	}
	return o.QtyCommitted, true
}

// HasQtyCommitted returns a boolean if a field has been set.
func (o *UpdateStockItemRequestPayload) HasQtyCommitted() bool {
	if o != nil && !IsNil(o.QtyCommitted) {
		return true
	}

	return false
}

// SetQtyCommitted gets a reference to the given int32 and assigns it to the QtyCommitted field.
func (o *UpdateStockItemRequestPayload) SetQtyCommitted(v int32) {
	o.QtyCommitted = &v
}

func (o UpdateStockItemRequestPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateStockItemRequestPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OutOfStockThreshold) {
		toSerialize["outOfStockThreshold"] = o.OutOfStockThreshold
	}
	if !IsNil(o.Qty) {
		toSerialize["qty"] = o.Qty
	}
	if !IsNil(o.QtyCommitted) {
		toSerialize["qtyCommitted"] = o.QtyCommitted
	}
	return toSerialize, nil
}

type NullableUpdateStockItemRequestPayload struct {
	value *UpdateStockItemRequestPayload
	isSet bool
}

func (v NullableUpdateStockItemRequestPayload) Get() *UpdateStockItemRequestPayload {
	return v.value
}

func (v *NullableUpdateStockItemRequestPayload) Set(val *UpdateStockItemRequestPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateStockItemRequestPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateStockItemRequestPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateStockItemRequestPayload(val *UpdateStockItemRequestPayload) *NullableUpdateStockItemRequestPayload {
	return &NullableUpdateStockItemRequestPayload{value: val, isSet: true}
}

func (v NullableUpdateStockItemRequestPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateStockItemRequestPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


