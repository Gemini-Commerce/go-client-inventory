/*
inventory Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package inventory

import (
	"encoding/json"
)

// InventoryCreateStockItemRequest struct for InventoryCreateStockItemRequest
type InventoryCreateStockItemRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	Sku *string `json:"sku,omitempty"`
	OutOfStockThreshold *int32 `json:"outOfStockThreshold,omitempty"`
	Qty *int32 `json:"qty,omitempty"`
	QtyCommitted *int32 `json:"qtyCommitted,omitempty"`
}

// NewInventoryCreateStockItemRequest instantiates a new InventoryCreateStockItemRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInventoryCreateStockItemRequest() *InventoryCreateStockItemRequest {
	this := InventoryCreateStockItemRequest{}
	return &this
}

// NewInventoryCreateStockItemRequestWithDefaults instantiates a new InventoryCreateStockItemRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInventoryCreateStockItemRequestWithDefaults() *InventoryCreateStockItemRequest {
	this := InventoryCreateStockItemRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *InventoryCreateStockItemRequest) GetTenantId() string {
	if o == nil || isNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryCreateStockItemRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || isNil(o.TenantId) {
    return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *InventoryCreateStockItemRequest) HasTenantId() bool {
	if o != nil && !isNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *InventoryCreateStockItemRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *InventoryCreateStockItemRequest) GetSku() string {
	if o == nil || isNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryCreateStockItemRequest) GetSkuOk() (*string, bool) {
	if o == nil || isNil(o.Sku) {
    return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *InventoryCreateStockItemRequest) HasSku() bool {
	if o != nil && !isNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *InventoryCreateStockItemRequest) SetSku(v string) {
	o.Sku = &v
}

// GetOutOfStockThreshold returns the OutOfStockThreshold field value if set, zero value otherwise.
func (o *InventoryCreateStockItemRequest) GetOutOfStockThreshold() int32 {
	if o == nil || isNil(o.OutOfStockThreshold) {
		var ret int32
		return ret
	}
	return *o.OutOfStockThreshold
}

// GetOutOfStockThresholdOk returns a tuple with the OutOfStockThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryCreateStockItemRequest) GetOutOfStockThresholdOk() (*int32, bool) {
	if o == nil || isNil(o.OutOfStockThreshold) {
    return nil, false
	}
	return o.OutOfStockThreshold, true
}

// HasOutOfStockThreshold returns a boolean if a field has been set.
func (o *InventoryCreateStockItemRequest) HasOutOfStockThreshold() bool {
	if o != nil && !isNil(o.OutOfStockThreshold) {
		return true
	}

	return false
}

// SetOutOfStockThreshold gets a reference to the given int32 and assigns it to the OutOfStockThreshold field.
func (o *InventoryCreateStockItemRequest) SetOutOfStockThreshold(v int32) {
	o.OutOfStockThreshold = &v
}

// GetQty returns the Qty field value if set, zero value otherwise.
func (o *InventoryCreateStockItemRequest) GetQty() int32 {
	if o == nil || isNil(o.Qty) {
		var ret int32
		return ret
	}
	return *o.Qty
}

// GetQtyOk returns a tuple with the Qty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryCreateStockItemRequest) GetQtyOk() (*int32, bool) {
	if o == nil || isNil(o.Qty) {
    return nil, false
	}
	return o.Qty, true
}

// HasQty returns a boolean if a field has been set.
func (o *InventoryCreateStockItemRequest) HasQty() bool {
	if o != nil && !isNil(o.Qty) {
		return true
	}

	return false
}

// SetQty gets a reference to the given int32 and assigns it to the Qty field.
func (o *InventoryCreateStockItemRequest) SetQty(v int32) {
	o.Qty = &v
}

// GetQtyCommitted returns the QtyCommitted field value if set, zero value otherwise.
func (o *InventoryCreateStockItemRequest) GetQtyCommitted() int32 {
	if o == nil || isNil(o.QtyCommitted) {
		var ret int32
		return ret
	}
	return *o.QtyCommitted
}

// GetQtyCommittedOk returns a tuple with the QtyCommitted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryCreateStockItemRequest) GetQtyCommittedOk() (*int32, bool) {
	if o == nil || isNil(o.QtyCommitted) {
    return nil, false
	}
	return o.QtyCommitted, true
}

// HasQtyCommitted returns a boolean if a field has been set.
func (o *InventoryCreateStockItemRequest) HasQtyCommitted() bool {
	if o != nil && !isNil(o.QtyCommitted) {
		return true
	}

	return false
}

// SetQtyCommitted gets a reference to the given int32 and assigns it to the QtyCommitted field.
func (o *InventoryCreateStockItemRequest) SetQtyCommitted(v int32) {
	o.QtyCommitted = &v
}

func (o InventoryCreateStockItemRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !isNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !isNil(o.OutOfStockThreshold) {
		toSerialize["outOfStockThreshold"] = o.OutOfStockThreshold
	}
	if !isNil(o.Qty) {
		toSerialize["qty"] = o.Qty
	}
	if !isNil(o.QtyCommitted) {
		toSerialize["qtyCommitted"] = o.QtyCommitted
	}
	return json.Marshal(toSerialize)
}

type NullableInventoryCreateStockItemRequest struct {
	value *InventoryCreateStockItemRequest
	isSet bool
}

func (v NullableInventoryCreateStockItemRequest) Get() *InventoryCreateStockItemRequest {
	return v.value
}

func (v *NullableInventoryCreateStockItemRequest) Set(val *InventoryCreateStockItemRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInventoryCreateStockItemRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInventoryCreateStockItemRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInventoryCreateStockItemRequest(val *InventoryCreateStockItemRequest) *NullableInventoryCreateStockItemRequest {
	return &NullableInventoryCreateStockItemRequest{value: val, isSet: true}
}

func (v NullableInventoryCreateStockItemRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInventoryCreateStockItemRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


